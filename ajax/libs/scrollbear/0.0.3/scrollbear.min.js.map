{"version":3,"sources":["scrollbear.js","rAF.js","index.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","from","_typeof","Symbol","iterator","obj","constructor","lastTime","vendors","x","window","requestAnimationFrame","cancelAnimationFrame","callback","element","currTime","Date","getTime","timeToCall","Math","max","id","setTimeout","Scrollbear","document","start","target","arguments","undefined","body","changedItem","querySelectorAll","unloadItems","concat","map","img","dom","calculatedHeight","oldHeight","childNodes","reduce","accumulateHeight","run","frame","newHeight","scroll","getScroll","isHeightChange","getLoadedItems","filter","item","offsetTop","markLoadedItems","returnScroll","stop","assign","prop","value","total","content","offsetHeight","scrollTop","scrollY","pos","scrollTo","items","exports","module","define","amd"],"mappings":"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","file":"scrollbear.min.js","sourcesContent":["import {} from './rAF.js'\n\nvar Scrollbear = (function(window, document) {\n  var run\n  function start(\n    target = document.body,\n    changedItem = target.querySelectorAll('img')) {\n    var unloadItems = ([...changedItem] || []).map(img => { return {dom: img, calculatedHeight: 0} })\n    var oldHeight = [...target.childNodes].reduce(accumulateHeight, 0)\n\n    run = true\n    // use closure to share the scope\n    var frame = function() {\n      if (!run) return\n      window.requestAnimationFrame(frame)\n\n      var newHeight = [...target.childNodes].reduce(accumulateHeight, 0)\n      // save the normal scroll position\n      var scroll = getScroll(target)\n      // container height change, means there's a image loaded\n      if (isHeightChange(oldHeight, newHeight)) {\n        // get loaded image, then determine if it's above the viewport\n        if (getLoadedItems(unloadItems)\n          .filter(item => item.dom.offsetTop < scroll)\n          .map(markLoadedItems).length > 0) {\n          // mark that part of item height is already be calculated\n          // unloadItems = markLoadedItems(unloadItems)\n          // return to normal scroll position, avoid the page jump\n          // there's only part we set the value of style, avoid sync layout threashing\n          returnScroll(target, scroll + (newHeight - oldHeight))\n        }\n      }\n      oldHeight = newHeight\n    }\n    return window.requestAnimationFrame(frame)\n  }\n  function stop() {\n    run = false\n  }\n  function assign(target, prop, value) {\n    target[prop] = value\n    return target\n  }\n  function accumulateHeight(total, content) {\n    return total + (content.offsetHeight || 0)\n  }\n  function isHeightChange(oldHeight, newHeight) {\n    return oldHeight !== newHeight\n  }\n  function getScroll(target) {\n    return target.scrollTop || window.scrollY\n  }\n  function returnScroll(target, pos) {\n    // document's scrollTop is undefined, and body will not scroll\n    // in these cases, we will scroll the whole window\n    if (typeof target.scrollTop === 'undefined' || target === document.body)\n      window.scrollTo(0, pos)\n    else\n      target.scrollTop = pos\n  }\n  function markLoadedItems(item) {\n    return assign(item, 'calculatedHeight', item.dom.offsetHeight)\n  }\n  function getLoadedItems(items) {\n    return items.filter(item => item.dom.offsetHeight > item.calculatedHeight)\n  }\n  // Public APIs\n  return {\n    start,\n    stop\n  }\n})(window, document)\nexport default Scrollbear\n","(function() {\n  var lastTime = 0\n  var vendors = ['ms', 'moz', 'webkit', 'o']\n  for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n    window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame']\n    window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] ||\n                                   window[vendors[x] + 'CancelRequestAnimationFrame']\n  }\n\n  if (!window.requestAnimationFrame)\n    window.requestAnimationFrame = function(callback, element) {\n      var currTime = new Date().getTime()\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime))\n      var id = window.setTimeout(function() { callback(currTime + timeToCall); },\n          timeToCall)\n      lastTime = currTime + timeToCall\n      return id\n    }\n}())\n","import Scrollbear from './scrollbear'\n\nif (typeof exports === 'object')\n    module.exports = Scrollbear\n  else if (typeof define === 'function' && typeof define.amd !== 'undefined')\n    define(function() { return Scrollbear })\n  else\n    window.Scrollbear = Scrollbear\n"],"sourceRoot":"/source/"}